/****************************** CHAPTER 1 简介 ******************************/

#源文件(.java 文件) 带有类的定义，类用来表示程序的一个组件。
#类中带有一个或多个方法，方法必须在类中声明。
#方法是由一组语句组成，是一个函数或过程。
public class Dog{
	void bark(){
		statement1;
		statement2;
	}
	#bark 方法
}
#Dog类

--------------------------------------
|           /source file/            |    
|   ---------------------------      | 
|   |       /class file/      |      | 
|   |    ------------------   |      |   
|   |    |   /method 1/   |   |      |    
|   |    |                |   |      |                      
|   |    |   statement    |   |      |     
|   |    ------------------   |      |         
|   |                         |      |               
|   |    ------------------   |      |         
|   |    |   /method 2/   |   |      |                     
|   |    |   statement1   |   |      |                  
|   |    |   statement2   |   |      |                 
|   |    ------------------   |      |         
|   |                         |      |                           
|   ---------------------------      |
|                                    |                      
--------------------------------------

/****************************** CHAPTER 2 面向对象化 ******************************/

public class Square(){
	rotate();
	playSound();
}
public class Circle(){
	rotate();
	playSound();
}
public class Triangle(){
	rotate();
	playSound();
}
public class Amoeba(){
	rotate();//
	playSound();//Amoeba 这个类有不一样的rotate和playsound的方法
}
#面向对象化
#每一个形状就是一个类，当有新的形状是再新建类
#Amoeba这个类可以覆盖(override)Shape的方法，Java虚拟机在遇到Amoeba时会使用不同的rotate()
#此例中，Amoeba覆盖rotate(),playSound()这两个父类的方法。
#覆盖的意思是由子类重新定义继承下来的方法，以改变或延伸此方法的行为
"继承性"：｛
    #(1) 找出几个类中相同的部分。 
	#(2) 他们都是Shape，而急切都有rotate 与playSound，可以提出新的类：shape
	#(3) 将4个形状体以称为继承的关系连接到Shape这个类。(Shape为父类，Square，Circle，Triangle为子类)
    #次级类会继承上级类的方法，也就是说，子类会自动获得父类的功能。父类比较抽象，子类比较具体。
｝

         
#对象|--实例变量:对象本身已知的事物，代表对象的状态(数据)，该类型的每一个对象都会独立的拥有一份该类型的值。
#    |------方法:对象可以执行的动作。
例子:
对象就相当于通讯录的一笔数据，通讯录的每张卡片都有相同的空白字段（实例变量）。
填入新的联络人就如同创建新的实例（对象），填入卡片的数据代表联络人的状态
这个卡片类上的方法就是你会对卡片做的事情：getTel(),changeAddress(),deleteCard()
每个卡片能够执行相同的动作，但取出的结果是独立的。

page 38

	
